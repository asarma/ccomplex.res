@relation vold-build-all

@attribute author# numeric
@attribute file# numeric
@attribute simple# numeric
@attribute complex# numeric
@attribute committer# numeric
@attribute author_bbansal.usc@gmail.com {n,y}
@attribute author_alex@strlen.net {n,y}
@attribute author_ismael@juma.me.uk {n,y}
@attribute author_jay.kreps@gmail.com {n,y}
@attribute author_csoman@linkedin.com {y,n}
@attribute author_kirk@mustardgrain.com {n,y}
@attribute author_rsumbaly@gmail.com {n,y}
@attribute author_readams@readams.net {n,y}
@attribute author_kirk@Kirk-Trues-MacBook-Pro.local {n,y}
@attribute author_jkreps@changeme-mn.local {n,y}
@attribute author_bbansal@linkedin.com {n,y}
@attribute author_mail.vinoth.chandar@gmail.com {y,n}
@attribute complex_src/java/voldemort/server/voldemortconfig.java {n,y}
@attribute complex_src/java/voldemort/server/storage/storageservice.java {n,y}
@attribute complex_src/java/voldemort/client/abstractstoreclientfactory.java {n,y}
@attribute complex_test/integration/voldemort/performance/admintest.java {n,y}
@attribute complex_src/java/voldemort/store/metadata/metadatastore.java {n,y}
@attribute complex_test/common/voldemort/servertestutils.java {n,y}
@attribute complex_src/java/voldemort/cluster/node.java {n,y}
@attribute complex_src/java/voldemort/client/clientconfig.java {n,y}
@attribute complex_src/java/voldemort/server/protocol/admin/protobuffadminservicerequesthandler.java {n,y}
@attribute complex_test/common/voldemort/testutils.java {n,y}
@attribute complex_src/java/voldemort/store/routed/routedstore.java {n,y}
@attribute complex_src/java/voldemort/client/protocol/pb/vproto.java {n,y}
@attribute complex_src/java/voldemort/store/insufficientoperationalnodesexception.java {n,y}
@attribute complex_src/java/voldemort/store/storeutils.java {n,y}
@attribute complex_contrib/ec2-testing/test/voldemort/utils/ec2remotetestconfig.java {n,y}
@attribute complex_test/unit/voldemort/client/adminservicebasictest.java {n,y}
@attribute complex_src/proto/voldemort-admin.proto {n,y}
@attribute complex_test/unit/voldemort/server/protocol/admin/asyncoperationtest.java {n,y}
@attribute complex_contrib/ec2-testing/src/java/voldemort/utils/clusternodedescriptor.java {n,y}
@attribute complex_test/unit/voldemort/store/rebalancing/rebalancingstoretest.java {n,y}
@attribute complex_bin/hadoop-build-readonly-store.sh {n,y}
@attribute complex_test/unit/voldemort/client/adminservicetest.java {n,y}
@attribute complex_src/java/voldemort/server/protocol/admin/asyncoperationrepository.java {n,y}
@attribute complex_src/java/voldemort/store/invalidmetadataexception.java {n,y}
@attribute complex_test/unit/voldemort/store/readonly/randomaccessstoretestinstance.java {n,y}
@attribute complex_src/java/voldemort/server/protocol/admin/asyncoperationrunner.java {n,y}
@attribute complex_src/java/voldemort/store/bdb/bdbstorageconfiguration.java {n,y}
@attribute complex_src/java/voldemort/store/readonly/storeswapper.java {n,y}
@attribute complex_contrib/ec2-testing/test/voldemort/utils/ec2rebalancetest.java {n,y}
@attribute complex_bin/build-readonly-store.sh {n,y}
@attribute complex_test/integration/voldemort/performance/remotetest.java {n,y}
@attribute complex_bin/swap-store.sh {n,y}
@attribute complex_src/java/voldemort/client/protocol/pb/vadminproto.java {n,y}
@attribute complex_contrib/ec2-testing/test/voldemort/utils/ec2rebalancingtest.java {n,y}
@attribute complex_src/java/voldemort/server/socket/adminservicerequesthandler.java {n,y}
@attribute complex_test/unit/voldemort/serialization/json/jsontypeserializertest.java {n,y}
@attribute complex_bin/sort.sh {n,y}
@attribute complex_test/unit/voldemort/client/adminservicefailuretest.java {n,y}
@attribute complex_src/java/voldemort/store/bdb/bdbstorageengine.java {n,y}
@attribute complex_src/java/voldemort/cluster/failuredetector/abstractfailuredetector.java {n,y}
@attribute complex_src/java/voldemort/server/socket/socketservice.java {n,y}
@attribute complex_src/java/voldemort/server/protocol/admin/adminservicerequesthandler.java {n,y}
@attribute complex_contrib/ec2-testing/test/voldemort/utils/remotetestutils.java {n,y}
@attribute complex_src/java/voldemort/server/voldemortserver.java {n,y}
@attribute complex_test/unit/voldemort/client/rebalance/abstractrebalancetest.java {n,y}
@attribute complex_src/java/voldemort/versioning/obsoleteversionexception.java {n,y}
@attribute complex_bin/run-class.sh {n,y}
@attribute complex_test/unit/voldemort/client/protobuffadminservicebasictest.java {n,y}
@attribute complex_contrib/hadoop-store-builder/src/java/voldemort/store/readonly/mr/hadoopstorejobrunner.java {n,y}
@attribute complex_src/java/voldemort/store/readonly/externalsorter.java {n,y}
@attribute complex_src/java/voldemort/store/configuration/configurationstorageengine.java {n,y}
@attribute complex_src/java/voldemort/utils/cmdutils.java {n,y}
@attribute complex_config/single_node_cluster/config/server.properties {n,y}
@attribute complex_test/unit/voldemort/store/readonly/readonlystorageenginetestinstance.java {n,y}
@attribute complex_contrib/ec2-testing/src/java/voldemort/utils/clustergenerator.java {n,y}
@attribute complex_src/java/voldemort/store/rebalancing/redirectingstore.java {n,y}
@attribute complex_src/java/voldemort/client/adminclient.java {n,y}
@attribute complex_src/java/voldemort/voldemortclientshell.java {n,y}
@attribute complex_src/java/voldemort/store/readonly/jsonstorebuilder.java {n,y}
@attribute complex_test/unit/voldemort/routing/consistentroutingstrategytest.java {n,y}
@attribute complex_src/java/log4j.properties {n,y}
@attribute complex_src/java/voldemort/client/protocol/admin/adminclient.java {n,y}
@attribute complex_src/java/voldemort/serialization/json/jsontypedefinition.java {n,y}
@attribute complex_test/unit/voldemort/cluster/testcluster.java {n,y}
@attribute complex_bin/voldemort-server.sh {n,y}
@attribute complex_src/java/voldemort/voldemortapplicationexception.java {n,y}
@attribute complex_src/java/voldemort/client/protocol/admin/adminclientrequestformat.java {n,y}
@attribute complex_test/unit/voldemort/store/readonly/readonlystorageenginetest.java {n,y}
@attribute complex_test/unit/voldemort/store/abstractstoretest.java {n,y}
@attribute complex_src/java/voldemort/server/socket/socketserver.java {n,y}
@attribute complex_src/java/voldemort/utils/eventthrottler.java {n,y}
@attribute simple_.gitignore {n,y}
@attribute simple_config/single_node_cluster/config/cluster.xml {n,y}
@attribute word_voldemort {n,y}
@attribute word_test {n,y}
@attribute word_store {n,y}
@attribute word_src {n,y}
@attribute word_java {n,y}
@attribute word_branch {y,n}
@attribute word_integr {n,y}
@attribute word_perform {n,y}
@attribute word_merg {y,n}
@attribute word_mongodb {n,y}
@attribute word_release-070 {n,y}
@attribute word_unit {n,y}
@attribute word_master {y,n}
@attribute word_fix {n,y}
@attribute word_server {y,n}
@attribute word_remot {n,y}
@attribute word_contrib {n,y}
@attribute word_trunk {n,y}
@attribute word_rout {n,y}
@attribute word_refactor {n,y}
@attribute word_ad {n,y}
@attribute word_i {y,n}
@attribute word_socket {n,y}
@attribute word_jmx {n,y}
@attribute word_becaus {n,y}
@attribute word_remov {n,y}
@attribute word_avail {n,y}
@attribute word_map {y,n}
@attribute word_us {n,y}
@attribute word_m {y}
@attribute word_client {n,y}
@attribute word_after {n,y}
@attribute word_work {n,y}
@attribute word_rebalanc {n,y}
@attribute word_pool {n,y}
@attribute word_name {n,y}
@attribute word_fetchkei {n,y}
@attribute word_cleanup {n,y}
@attribute word_github.com {n,y}
@attribute word_readonli {n,y}
@attribute word_socketstoreclientfactory.java {n,y}
@attribute word_readonlystorageengine.java {n,y}
@attribute word_semilocalhttpstoreloadtest.java {n,y}
@attribute word_intermedi {n,y}
@attribute word_mulltiplejvm {n,y}
@attribute word_upgrad {n,y}
@attribute word_refer {n,y}
@attribute word_file {n,y}
@attribute word_repo {n,y}
@attribute word_mongodbstorageconfiguration.java {n,y}
@attribute word_jsontypedefint {n,y}
@attribute word_limit {n,y}
@attribute word_unixcommand {n,y}
@attribute word_support {n,y}
@attribute word_storageservice.java {n,y}
@attribute word_how {n,y}
@attribute word_onli {n,y}
@attribute word_suggest {n,y}
@attribute word_startup {n,y}
@attribute word_log {n,y}
@attribute word_few {n,y}
@attribute word_localdirectloadtest.java {n,y}
@attribute word_endtoendtest.java {n,y}
@attribute word_now {n,y}
@attribute word_start {n,y}
@attribute word_ec2 {n,y}
@attribute word_invalidmetadataexcept {n,y}
@attribute word_fetchpartitionkei {n,y}
@attribute word_conflict {n,y}
@attribute word_some {n,y}
@attribute word_mongodbstorageengine.java {n,y}
@attribute word_complex {n,y}
@attribute word_sort {n,y}
@attribute word_conn {y,n}
@attribute word_minimum {n,y}
@attribute word_delet {n,y}
@attribute word_bdb {n,y}
@attribute word_vs {n,y}
@attribute word_date {n,y}
@attribute word_invalidmetadatacheckingstore.java {n,y}
@attribute word_remotetest.java {n,y}
@attribute word_issu {n,y}
@attribute word_detector {y,n}
@attribute word_transform {n,y}
@attribute word_upstream {n,y}
@attribute word_gossip {n,y}
@attribute word_side {n,y}
@attribute word_keynam {n,y}
@attribute word_extern {n,y}
@attribute word_redirectingstore.java {n,y}
@attribute word_storerepository.java {n,y}
@attribute word_initi {n,y}
@attribute word_abstractfailuredetector {y,n}
@attribute word_end {n,y}
@attribute word_abstractstoreclientfactory.java {n,y}
@attribute word_socketstore.java {n,y}
@attribute word_fetchpartitionentri {n,y}
@attribute word_fwk {n,y}
@attribute word_failur {y,n}
@attribute word_serversid {n,y}
@attribute word_routedstore.java {n,y}
@attribute word_registr {n,y}
@attribute word_mongodbclient.java {n,y}
@attribute word_differ {n,y}
@attribute word_hostnam {n,y}
@attribute word_t {y}
@attribute word_per {n,y}
@attribute word_revis {n,y}
@attribute word_remotestorecomparisontest.java {n,y}
@attribute word_readrepairertest.java {n,y}
@attribute word_intern {n,y}
@attribute word_exampl {n,y}
@attribute word_bug {n,y}
@attribute word_respect {n,y}
@attribute word_abstractloadtestharness.java {n,y}
@attribute word_rebootstrappingstore.java {n,y}
@attribute word_tool {n,y}
@attribute word_type {n,y}
@attribute word_kei {n,y}
@attribute word_close {n,y}
@attribute word_combin {y,n}
@attribute word_4.0.103 {n,y}
@attribute word_abstractsocketstoretest.java {n,y}
@attribute word_invalidmetadata {n,y}
@attribute word_ant {n,y}
@attribute word_git@github.com {n,y}
@attribute word_sure {n,y}
@attribute word_rethrow {n,y}
@attribute word_except {n,y}
@attribute word_creat {n,y}
@attribute word_consist {n,y}
@attribute word_composit {y,n}
@attribute word_enabl {n,y}
@attribute word_release-060 {n,y}
@attribute word_code {n,y}
@attribute word_script {n,y}
@attribute word_logic {n,y}
@attribute word_discov {n,y}
@attribute word_node {y,n}
@attribute word_mongodbstorageenginetest.java {n,y}
@attribute word_throttl {n,y}
@attribute word_routedstoretest.java {n,y}
@attribute word_didn {n,y}
@attribute word_make {n,y}
@attribute word_call {n,y}
@attribute word_connect {n,y}
@attribute word_set {n,y}
@attribute word_readonlystoreperformancetest.java {n,y}
@attribute word_hang {n,y}
@attribute word_startedstatusqueu {n,y}
@attribute word_read {n,y}
@attribute word_implement {n,y}
@attribute word_localroutedstoreloadtest.java {n,y}
@attribute word_deadlock {n,y}
@attribute word_zip {n,y}
@attribute word_constant {n,y}
@attribute word_check {n,y}
@attribute word_adminservicerequesthandl {n,y}
@attribute word_track {y,n}
@attribute word_problem {n,y}
@attribute word_junit {n,y}
@attribute word_storag {n,y}
@attribute word_pass {n,y}
@attribute word_misc {n,y}
@attribute word_handl {n,y}
@attribute word_testclust {n,y}
@attribute word_je {n,y}
@attribute word_which {n,y}
@attribute word_rebalanceblacklist {n,y}
@attribute word_instead {n,y}
@attribute word_target {n,y}
@attribute word_improv {n,y}
@attribute word_statu {y,n}
@attribute word_chang {n,y}
@attribute word_first {n,y}
@attribute word_also {n,y}
@attribute word_remotehttpstoreloadtest.java {n,y}
@attribute word_out {n,y}
@attribute label {HARD,EASY}

@data
2,0,0,0,2,n,n,n,n,y,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,y,n,n,n,y,n,y,n,n,n,n,n,n,y,n,n,n,n,n,y,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,y,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,EASY
1,1,0,1,1,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,y,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,y,y,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,y,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,EASY
2,0,0,0,2,n,n,y,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,y,y,y,y,n,y,y,n,y,n,y,n,n,y,y,y,n,y,n,y,y,y,n,n,n,n,n,n,y,y,n,n,y,n,n,n,n,n,y,y,y,y,y,n,y,n,n,y,y,n,n,n,n,y,n,y,n,n,n,n,y,y,n,n,n,n,n,y,n,y,n,n,n,n,n,y,n,n,y,y,y,n,y,n,n,y,n,n,y,y,n,n,y,y,y,n,n,n,n,y,n,y,n,n,y,y,n,y,y,n,y,n,n,y,y,n,n,n,y,n,y,y,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,y,n,n,n,n,n,y,n,n,y,n,y,n,n,n,y,n,n,n,n,y,n,n,n,n,y,n,n,n,n,n,n,n,n,n,y,y,HARD
2,6,1,5,2,n,y,n,n,n,y,n,n,n,n,n,n,y,n,y,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,y,n,n,y,n,y,n,n,n,n,y,n,y,n,n,n,y,n,y,n,n,n,n,n,y,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,y,n,n,n,y,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,HARD
1,10,0,10,1,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,y,y,n,n,n,y,n,n,y,n,n,y,n,n,n,n,y,n,n,n,n,n,n,n,n,y,n,y,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,y,n,y,n,n,n,n,y,n,y,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,HARD
2,19,0,19,2,y,n,n,n,n,y,n,n,n,n,n,n,y,y,n,n,y,n,y,n,y,y,y,y,y,n,n,y,y,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,y,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,y,n,n,n,n,n,n,n,n,n,y,y,n,n,n,y,n,n,n,n,n,n,n,n,y,y,n,n,n,n,n,n,n,n,y,n,y,n,n,n,n,n,n,y,y,n,n,y,y,y,n,y,y,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,y,n,n,n,y,y,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,y,n,y,n,n,n,n,n,n,y,y,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,y,n,y,y,n,n,n,n,y,n,y,n,n,n,n,n,y,y,n,n,n,n,n,n,n,n,y,n,n,n,n,y,n,y,y,y,y,n,n,n,n,y,n,y,HARD
1,1,0,1,1,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,y,n,n,y,n,n,n,y,n,n,n,n,y,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,HARD
2,5,0,5,2,y,y,n,n,n,n,n,n,n,n,n,n,y,n,n,y,n,y,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,EASY
2,0,0,0,2,y,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,y,n,y,y,n,n,n,n,n,n,y,y,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,y,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,y,y,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,EASY
2,10,0,10,2,n,n,n,n,n,n,n,n,y,n,y,n,y,y,y,n,n,n,y,y,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,y,n,n,n,y,n,n,n,n,y,n,n,n,n,n,n,n,n,n,y,n,n,y,n,n,n,y,n,n,y,n,n,n,y,y,y,n,n,n,n,y,n,y,y,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,HARD
2,5,0,5,2,y,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,y,n,n,n,n,n,n,n,n,n,y,n,y,n,n,n,n,n,n,y,y,n,n,n,n,n,n,y,y,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,y,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,EASY
2,2,0,2,2,y,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,y,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,y,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,EASY
2,0,0,0,2,y,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,y,y,y,n,n,y,n,n,n,y,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,y,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,EASY
1,28,1,27,1,y,n,n,n,n,n,n,n,n,n,n,n,y,y,n,n,n,y,n,n,n,y,n,n,n,n,n,n,n,n,n,y,y,y,n,n,y,n,n,y,n,y,y,y,n,n,y,y,y,n,n,n,n,n,n,y,n,n,y,n,y,y,n,y,y,y,n,n,y,n,y,n,n,n,y,n,y,n,n,y,n,n,n,y,n,y,n,n,n,n,y,n,n,y,n,n,n,y,y,n,n,n,n,n,n,n,y,n,n,n,n,n,y,n,y,n,y,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,HARD
2,1,0,1,2,n,n,n,y,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,y,y,n,y,n,n,n,n,n,y,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,y,n,n,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,n,EASY
2,0,0,0,2,y,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,y,n,n,n,n,n,n,n,y,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,y,n,n,n,n,n,y,y,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,n,n,n,n,n,n,n,n,y,n,n,n,EASY
